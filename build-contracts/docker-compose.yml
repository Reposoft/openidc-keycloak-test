version: '2'
services:
  postgres:
    image: postgres:9.6
    expose:
      - "5432"
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
  keycloak:
    image: jboss/keycloak:3.4.0.Final@sha256:73f3325c9bf9518cb1a2661ff1d1e365cfeb51b44a323f4cfc23040f3d84e6ef
    links:
      - postgres
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: openidctest
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      # Workaround for container using legacy Docker links, resulting in
      # "WFLYCTL0211: Cannot resolve expression 'jdbc:postgresql://${env.POSTGRES_PORT_5432_TCP_ADDR}...")n
      POSTGRES_PORT_5432_TCP_ADDR: postgres
    expose:
      - "8080"
      - "9990"
    ports:
      - "8080:8080"
  httpd-openidc:
    build: ../httpd-openidc
    image: localhost:5000/reposoft/httpd-openidc
    entrypoint:
      - echo
      - "This was just a build job. Exiting."
  openidc:
    build: ./openidc
    depends_on:
      - httpd-openidc
      - keycloak
    # Don't allow direct communication with keycloak; depends on hosting scenario
    #links:
    #  - keycloak
    expose:
      - "80"
    # For local browser; you also need "openidc" in your hosts file
    ports:
      - "80:80"
    volumes:
      - ./html-ajax:/usr/local/apache2/htdocs
  keycloak-setup:
    build: ./keycloak-setup
    links:
      - keycloak
    volumes:
      - ./keycloak-setup/export:/export
  testclient:
    build: ./client-node-request
    links:
      - openidc
      - keycloak
